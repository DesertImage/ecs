using UnityEngine;namespace DesertImage.Pools{    public class PoolGameObject : PoolMonoBehaviour<GameObject>    {        public PoolGameObject(Transform parent) : base(parent)        {        }        protected override int GetId(GameObject instance)        {            return instance ? instance.GetInstanceID() : -1;        }        protected override void GetStuff(GameObject instance)        {            var poolable = instance.GetComponent<IPoolable>();            poolable?.OnCreate();            instance.transform.SetParent(null);            instance.SetActive(true);        }        protected override void ReturnStuff(GameObject instance)        {            if (!instance)            {#if DEBUG                Debug.LogError("[PoolGameObject] returned instance is <color=red>NULL</color>");#endif                return;            }            instance.SetActive(false);            instance.transform.SetParent(Parent, false);        }    }}